include/master-slave.inc
[connection master]
connection master;
CREATE TABLE t1 (a int, b int, c int,
INDEX i1(a),
INDEX i2(b))
ENGINE=InnoDB;
INSERT INTO t1 VALUES
(1,1,0), (1,2,0),
(2,1,0), (2,2,0);
connection slave;
connection master;
XA START "t1";
UPDATE t1 FORCE INDEX (i2) SET c=c+1 WHERE a=1 AND b=1;
XA END "t1";
XA PREPARE "t1";
connection master1;
connection slave;
FLUSH NO_WRITE_TO_BINLOG BINARY LOGS;
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
slave-bin.000001	#	Gtid	#	#	GTID #-#-#
slave-bin.000001	#	Query	#	#	use `test`; CREATE TABLE t1 (a int, b int, c int,
INDEX i1(a),
INDEX i2(b))
ENGINE=InnoDB
slave-bin.000001	#	Gtid	#	#	BEGIN GTID #-#-#
slave-bin.000001	#	Query	#	#	use `test`; INSERT INTO t1 VALUES
(1,1,0), (1,2,0),
(2,1,0), (2,2,0)
slave-bin.000001	#	Xid	#	#	COMMIT /* XID */
slave-bin.000001	#	Xa_prepared_trx	#	#	XA PREPARED TRX X'7431',X'',1
slave-bin.000001	#	Rotate	#	#	slave-bin.000002;pos=POS
PURGE BINARY LOGS TO 'slave-bin.000002';
*** Must preserve slave-bin.000001, as trx 't1' is pending.
show binary logs;
Log_name	File_size
slave-bin.000001	#
slave-bin.000002	#
connection master1;
XA START "t2";
UPDATE t1 FORCE INDEX (i2) SET c=c+1 WHERE a=1 AND b=2;
XA END "t2";
XA PREPARE "t2";
connect con1,localhost,root,,;
FLUSH NO_WRITE_TO_BINLOG BINARY LOGS;
PURGE BINARY LOGS TO 'master-bin.000002';
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
master-bin.000001	#	Gtid	#	#	GTID #-#-#
master-bin.000001	#	Query	#	#	use `test`; CREATE TABLE t1 (a int, b int, c int,
INDEX i1(a),
INDEX i2(b))
ENGINE=InnoDB
master-bin.000001	#	Gtid	#	#	BEGIN GTID #-#-#
master-bin.000001	#	Query	#	#	use `test`; INSERT INTO t1 VALUES
(1,1,0), (1,2,0),
(2,1,0), (2,2,0)
master-bin.000001	#	Xid	#	#	COMMIT /* XID */
master-bin.000001	#	Xa_prepared_trx	#	#	XA PREPARED TRX X'7431',X'',1
master-bin.000001	#	Xa_prepared_trx	#	#	XA PREPARED TRX X'7432',X'',1
master-bin.000001	#	Rotate	#	#	master-bin.000002;pos=POS
*** Must preserver master-bin.000001, as it contains prepared-but-not-committed trx 't1' and 't2'
show binary logs;
Log_name	File_size
master-bin.000001	#
master-bin.000002	#
disconnect con1;
connection master;
XA ROLLBACK "t1";
connection slave;
FLUSH NO_WRITE_TO_BINLOG BINARY LOGS;
PURGE BINARY LOGS TO 'slave-bin.000003';
*** Must remove slave-bin.000001, but preserve slave-bin.000002 as trx 't2' is still pending.
show binary logs;
Log_name	File_size
slave-bin.000002	#
slave-bin.000003	#
connection master1;
XA COMMIT "t2";
connection master;
SELECT * FROM t1 ORDER BY a,b,c;
a	b	c
1	1	0
1	2	1
2	1	0
2	2	0
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
master-bin.000002	#	Gtid	#	#	BEGIN GTID X'7431',X'',1 GTID #-#-#
master-bin.000002	#	Query	#	#	ROLLBACK
master-bin.000002	#	Gtid	#	#	BEGIN GTID X'7432',X'',1 GTID #-#-#
master-bin.000002	#	Query	#	#	use `test`; UPDATE t1 FORCE INDEX (i2) SET c=c+1 WHERE a=1 AND b=2
master-bin.000002	#	Query	#	#	COMMIT
master-bin.000002	#	Binlog_checkpoint	#	#	master-bin.000002
connection slave;
SELECT * FROM t1 ORDER BY a,b,c;
a	b	c
1	1	0
1	2	1
2	1	0
2	2	0
connection master;
PURGE BINARY LOGS TO 'master-bin.000002';
*** Must remove master-bin.000001, as trx 't1' and 't2' have been rolled back
show binary logs;
Log_name	File_size
master-bin.000002	#
connection master;
DROP TABLE t1;
connection slave;
FLUSH NO_WRITE_TO_BINLOG BINARY LOGS;
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
slave-bin.000002	#	Xa_prepared_trx	#	#	XA PREPARED TRX X'7432',X'',1
slave-bin.000002	#	Gtid	#	#	BEGIN GTID X'7431',X'',1 GTID #-#-#
slave-bin.000002	#	Query	#	#	ROLLBACK
slave-bin.000002	#	Binlog_checkpoint	#	#	slave-bin.000002
slave-bin.000002	#	Rotate	#	#	slave-bin.000003;pos=POS
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
slave-bin.000003	#	Binlog_checkpoint	#	#	slave-bin.000003
slave-bin.000003	#	Gtid	#	#	BEGIN GTID X'7432',X'',1 GTID #-#-#
slave-bin.000003	#	Query	#	#	use `test`; UPDATE t1 FORCE INDEX (i2) SET c=c+1 WHERE a=1 AND b=2
slave-bin.000003	#	Xid	#	#	COMMIT /* XID */
slave-bin.000003	#	Gtid	#	#	GTID #-#-#
slave-bin.000003	#	Query	#	#	use `test`; DROP TABLE IF EXISTS `t1` /* generated by server */
slave-bin.000003	#	Rotate	#	#	slave-bin.000004;pos=POS
PURGE BINARY LOGS TO 'slave-bin.000004';
*** Must remove slave-bin.000002 and slave-bin.000003, as now there are no pending trx
show binary logs;
Log_name	File_size
slave-bin.000004	#
include/rpl_end.inc
